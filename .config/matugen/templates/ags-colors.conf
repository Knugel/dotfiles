@use 'sass:color';

@function red($color) {
    @return color.channel($color, 'red', $space: rgb);
}

@function green($color) {
    @return color.channel($color, 'green', $space: rgb);
}

@function blue($color) {
    @return color.channel($color, 'blue', $space: rgb);
}

@function elevate($layer, $base, $opacity) {
  $r: red($base) + (red($layer) - red($base)) * $opacity;
  $g: green($base) + (green($layer) - green($base)) * $opacity;
  $b: blue($base) + (blue($layer) - blue($base)) * $opacity;
  @return rgb($r, $g, $b);
}

@mixin elevations($layer, $base, $name) {
    --#{$name}-layer-1: #{elevate($layer, $base, 0.08)};
    --#{$name}-layer-2: #{elevate($layer, $base, 0.12)};
    --#{$name}-layer-3: #{elevate($layer, $base, 0.16)};
    --#{$name}-state-layer-1: #{rgba(red($base), green($base), blue($base), 0.08)};
    --#{$name}-state-layer-2: #{rgba(red($base), green($base), blue($base), 0.12)};
    --#{$name}-state-layer-3: #{rgba(red($base), green($base), blue($base), 0.16)};
}
<* for name, value in colors *>${{name}}: {{value.default.hex}};
<* endfor *>

:root {
<* for name, value in colors *>    --{{name}}: {{value.default.hex}};
<* endfor *>
    @include elevations($on_secondary_container, $secondary_container, secondary_container);
    @include elevations(black, $primary, primary);
    @include elevations(black, $error, error);
}